<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.green-code-initiative</groupId>
    <artifactId>creedengo-infra-plugin</artifactId>
    <version>0.0.1</version>

    <packaging>sonar-plugin</packaging>

    <name>Creedengo Infra plugin</name>
    <description>Provides rules to reduce the environmental footprint of your infra as code</description>
    <inceptionYear>2025</inceptionYear>

    <url>https://github.com/green-code-initiative/creedengo-infra</url>
    <organization>
        <name>green-code-initiative</name>
        <url>https://github.com/green-code-initiative</url>
    </organization>

    <scm>
        <connection>scm:git:https://github.com/green-code-initiative/creedengo-infra</connection>
        <developerConnection>scm:git:https://github.com/green-code-initiative/creedengo-infra</developerConnection>
        <url>https://github.com/green-code-initiative/creedengo-infra</url>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/green-code-initiative/creedengo-infra/issues</url>
    </issueManagement>

    <licenses>
        <license>
            <name>GPL v3</name>
            <url>https://www.gnu.org/licenses/gpl-3.0.en.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <encoding>UTF-8</encoding>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
        <version.creedengo-rules-specifications>2.2.2</version.creedengo-rules-specifications>
        <version.sonarqube>12.0.0.2960</version.sonarqube>
        <version.sonar-java>8.14.0.39102</version.sonar-java>
        <version.sonar-packaging>1.23.0.740</version.sonar-packaging>
        <version.sonar-analyzer-commons>2.17.0.3322</version.sonar-analyzer-commons>
        <version.buildnumber>3.1.0</version.buildnumber>
        <version.maven-exec>3.5.0</version.maven-exec>
        <version.maven-shade>3.6.0</version.maven-shade>
        <version.protobuf>4.31.0</version.protobuf>
        <version.license-maven-plugin>5.0.0</version.license-maven-plugin>
        <version.sonar-iac>1.24.0.7839</version.sonar-iac>
        <version.snakeyaml>2.4</version.snakeyaml>
        <version.junit>5.12.2</version.junit>
        <version.mockito>5.17.0</version.mockito>
        <version.assertj>3.27.3</version.assertj>
        <version.jacoco>0.8.12</version.jacoco>
        <version.test-it.sonarqube>25.5.0.107428</version.test-it.sonarqube>

            <!-- URL of the Maven repository where sonarqube will be downloaded -->
        <test-it.orchestrator.artifactory.url>https://repo1.maven.org/maven2</test-it.orchestrator.artifactory.url>
        <!-- You can override this property to keep SonarQube instance running and to manually use it -->
        <test-it.sonarqube.keepRunning>false</test-it.sonarqube.keepRunning>
        <!-- SonarQube server listening port. Leave this property blank to automatically choose an available port. -->
        <test-it.sonarqube.port />

    </properties>

    <dependencyManagement>
    <dependencies>
         <dependency>
            <groupId>org.sonarsource.iac</groupId>
            <artifactId>iac-extensions</artifactId>
            <version>1.24.0.7839</version>
            <type>pom</type>
        </dependency>
    </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.green-code-initiative</groupId>
            <artifactId>creedengo-rules-specifications</artifactId>
            <version>${version.creedengo-rules-specifications}</version>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.iac</groupId>
            <artifactId>iac-its-plugin</artifactId>
            <version>1.4.0.1294</version>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.iac</groupId>
            <artifactId>iac-its-ruling</artifactId>
            <version>1.4.0.1294</version>
        </dependency>
         <dependency>
            <groupId>org.sonarsource.iac</groupId>
            <artifactId>sonar-iac-plugin</artifactId>
            <version>1.46.0.15097</version>
        </dependency>   
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>${version.snakeyaml}</version>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.iac</groupId>
            <artifactId>sonar-helm-for-iac</artifactId>
            <version>${version.sonar-iac}</version>
        </dependency>            
        <dependency>
            <groupId>org.sonarsource.iac</groupId>
            <artifactId>sonar-iac-common</artifactId>
            <version>${version.sonar-iac}</version>
        </dependency>     
        <dependency>
        <groupId>org.sonarsource.iac</groupId>
            <artifactId>sonar-iac-kubernetes</artifactId>
            <version>${version.sonar-iac}</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${version.protobuf}</version>
        </dependency>   
        <dependency>
            <groupId>org.sonarsource.api.plugin</groupId>
            <artifactId>sonar-plugin-api</artifactId>
            <version>${version.sonarqube}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.sonarsource.java</groupId>
            <artifactId>sonar-java-plugin</artifactId>
            <version>${version.sonar-java}</version>
            <type>sonar-plugin</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${version.mockito}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.analyzer-commons</groupId>
            <artifactId>sonar-analyzer-commons</artifactId>
            <version>${version.sonar-analyzer-commons}</version>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.analyzer-commons</groupId>
            <artifactId>sonar-analyzer-test-commons</artifactId>
            <version>${version.sonar-analyzer-commons}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.api.plugin</groupId>
            <artifactId>sonar-plugin-api-test-fixtures</artifactId>
            <version>12.0.0.2960</version>
            <scope>test</scope>
        </dependency>   
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${version.assertj}</version>
            <scope>test</scope>
        </dependency>

        <!-- Dependencies used by integration tests -->
        <dependency>
            <groupId>org.sonarsource.orchestrator</groupId>
            <artifactId>sonar-orchestrator-junit5</artifactId>
            <version>5.6.1.2597</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.java</groupId>
            <artifactId>test-classpath-reader</artifactId>
            <version>8.8.0.37665</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.sonarqube</groupId>
            <artifactId>sonar-ws</artifactId>
            <version>${version.test-it.sonarqube}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.jycr</groupId>
            <artifactId>java-data-url-handler</artifactId>
            <version>0.0.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.5.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.36</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.sonarsource.sonar-packaging-maven-plugin</groupId>
                <artifactId>sonar-packaging-maven-plugin</artifactId>
                <version>${version.sonar-packaging}</version>
                <extensions>true</extensions>
                <configuration>
                    <pluginKey>creedengoinfra</pluginKey>
                    <pluginName>${project.name}</pluginName>
                    <pluginClass>org.greencodeinitiative.creedengo.infra.InfraPlugin</pluginClass>
                    <sonarLintSupported>false</sonarLintSupported>
                    <pluginApiMinVersion>${version.sonarqube}</pluginApiMinVersion>
                    <skipDependenciesPackaging>true</skipDependenciesPackaging>
                    <jreMinVersion>${java.version}</jreMinVersion>
                    <requiredForLanguages>js,ts,web,yaml</requiredForLanguages>
                    <archive>
                        <manifestEntries>
                            <Implementation-Build>${buildNumber}</Implementation-Build>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${version.maven-shade}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>false</shadedArtifactAttached>
                            <minimizeJar>true</minimizeJar>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <filters>
                                <filter>
                                    <artifact>org.sonarsource.analyzer-commons:sonar-analyzer-commons:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/**</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>org.green-code-initiative:creedengo-rules-specifications:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/**</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>${version.buildnumber}</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                    <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                    <revisionOnScmFailure>0</revisionOnScmFailure>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${version.jacoco}</version>
                <configuration>
                    <output>file</output>
                    <append>false</append>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${version.license-maven-plugin}</version>
                <configuration>
                    <properties>
                        <owner>Green Code Initiative</owner>
                        <email>https://green-code-initiative.org</email>
                    </properties>
                    <licenseSets>
                        <licenseSet>
                            <header>com/mycila/maven/plugin/license/templates/GPL-3.txt</header>
                            <includes>
                                <include>${project.basedir}/src/**/*.java</include>
                            </includes>
                        </licenseSet>
                    </licenseSets>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>
            <!-- activate integration tests -->
            <plugin>
                <!-- add integration test sources into test classpath -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>add-integration-test-sources</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/src/it/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-integration-test-resources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/it/resources</directory>
                                </resource>
                                <resource>
                                    <filtering>true</filtering>
                                    <directory>${project.basedir}/src/it/resources-filtered</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Execute integration tests -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.5.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <systemPropertyVariables>
                                <test-it.sonarqube.keepRunning>${test-it.sonarqube.keepRunning}</test-it.sonarqube.keepRunning>
                                <test-it.orchestrator.artifactory.url>${test-it.orchestrator.artifactory.url}</test-it.orchestrator.artifactory.url>
                                <test-it.sonarqube.version>${test-it.sonarqube.version}</test-it.sonarqube.version>
                                <test-it.sonarqube.port>${test-it.sonarqube.port}</test-it.sonarqube.port>
                                <!-- Comma separated list of plugins (`groupId|artifactId|version` or `file:///`) to install in SonarQube instance before lunching integration tests -->
                                <test-it.plugins>
                                    ${project.baseUri}/target/${project.artifactId}-${project.version}.jar,
                                    org.sonarsource.java:sonar-infra-plugin:${test-it.sonarjava.version},
                                </test-it.plugins>
                                <!-- Comma separated JSON profile file URIs to load -->
                                <test-it.additional-profile-uris>
                                    ${project.baseUri}/src/main/resources/org/greencodeinitiative/creedengo/java/creedengo_way_profile.json,
                                </test-it.additional-profile-uris>
                                <!-- Comma separated paths of "test projects" to analyze. Syntaxe: `sonar.projectKey|sonar.projectName|project.pomUri` -->
                                <test-it.test-projects>
                                    org.green-code-initiative:creedengo-infra-plugin-test-project|creedengo Java Sonar Plugin Test Project|${project.baseUri}/src/it/test-projects/creedengo-infra-plugin-test-project/pom.xml,
                                </test-it.test-projects>
                                <!-- Comma separated list of profiles to associate to each "test project". Syntaxe: `language:profileName` -->
                                <test-it.test-project-profile-by-language>
                                    java|creedengo way,
                                </test-it.test-project-profile-by-language>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>keep-running</id>
            <properties>
                <test-it.sonarqube.keepRunning>true</test-it.sonarqube.keepRunning>
<!--                <test-it.sonarqube.port>9000</test-it.sonarqube.port>-->
                <test-it.sonarqube.port>33333</test-it.sonarqube.port>
            </properties>
        </profile>
    </profiles>
</project>
